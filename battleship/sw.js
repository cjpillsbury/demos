try{self["workbox:core:5.1.2"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},i=i=>[e.prefix,i,e.suffix].filter(e=>e&&e.length>0).join("-"),a=a=>a||i(e.precache),s=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),""),n=(e,...i)=>{let a=e;return i.length>0&&(a+=` :: ${JSON.stringify(i)}`),a};class t extends Error{constructor(e,i){super(n(e,i)),this.name=e,this.details=i}}const r=new Set;const c=(e,i)=>e.filter(e=>i in e),o=async({request:e,mode:i,plugins:a=[]})=>{const s=c(a,"cacheKeyWillBeUsed");let n=e;for(const e of s)n=await e.cacheKeyWillBeUsed.call(e,{mode:i,request:n}),"string"==typeof n&&(n=new Request(n));return n},f=async({cacheName:e,request:i,event:a,matchOptions:s,plugins:n=[]})=>{const t=await self.caches.open(e),r=await o({plugins:n,request:i,mode:"read"});let c=await t.match(r,s);for(const i of n)if("cachedResponseWillBeUsed"in i){const n=i.cachedResponseWillBeUsed;c=await n.call(i,{cacheName:e,event:a,matchOptions:s,cachedResponse:c,request:r})}return c},d=async({cacheName:e,request:i,response:a,event:n,plugins:d=[],matchOptions:l})=>{const b=await o({plugins:d,request:i,mode:"write"});if(!a)throw new t("cache-put-with-no-response",{url:s(b.url)});const u=await(async({request:e,response:i,event:a,plugins:s=[]})=>{let n=i,t=!1;for(const i of s)if("cacheWillUpdate"in i){t=!0;const s=i.cacheWillUpdate;if(n=await s.call(i,{request:e,response:n,event:a}),!n)break}return t||(n=n&&200===n.status?n:void 0),n||null})({event:n,plugins:d,response:a,request:b});if(!u)return;const p=await self.caches.open(e),g=c(d,"cacheDidUpdate"),h=g.length>0?await f({cacheName:e,matchOptions:l,request:b}):null;try{await p.put(b,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of r)await e()}(),e}for(const i of g)await i.cacheDidUpdate.call(i,{cacheName:e,event:n,oldResponse:h,newResponse:u,request:b})},l=async({request:e,fetchOptions:i,event:a,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),a instanceof FetchEvent&&a.preloadResponse){const e=await a.preloadResponse;if(e)return e}const n=c(s,"fetchDidFail"),r=n.length>0?e.clone():null;try{for(const i of s)if("requestWillFetch"in i){const s=i.requestWillFetch,n=e.clone();e=await s.call(i,{request:n,event:a})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const o=e.clone();try{let n;n="navigate"===e.mode?await fetch(e):await fetch(e,i);for(const e of s)"fetchDidSucceed"in e&&(n=await e.fetchDidSucceed.call(e,{event:a,request:o,response:n}));return n}catch(e){for(const i of n)await i.fetchDidFail.call(i,{error:e,event:a,originalRequest:r.clone(),request:o.clone()});throw e}};let b;async function u(e,i){const a=e.clone(),s={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},n=i?i(s):s,t=function(){if(void 0===b){const e=new Response("");if("body"in e)try{new Response(e.body),b=!0}catch(e){b=!1}b=!1}return b}()?a.body:await a.blob();return new Response(t,n)}try{self["workbox:precaching:5.1.2"]&&_()}catch(e){}function p(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const i=new URL(e,location.href);return{cacheKey:i.href,url:i.href}}const{revision:i,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!i){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(a,location.href),n=new URL(a,location.href);return s.searchParams.set("__WB_REVISION__",i),{cacheKey:s.href,url:n.href}}class g{constructor(e){this.i=a(e),this.s=new Map,this.t=new Map,this.o=new Map}addToCacheList(e){const i=[];for(const a of e){"string"==typeof a?i.push(a):a&&void 0===a.revision&&i.push(a.url);const{cacheKey:e,url:s}=p(a),n="string"!=typeof a&&a.revision?"reload":"default";if(this.s.has(s)&&this.s.get(s)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(s),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this.o.has(e)&&this.o.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:s});this.o.set(e,a.integrity)}if(this.s.set(s,e),this.t.set(s,n),i.length>0){const e="Workbox is precaching URLs without revision "+`info: ${i.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:i}={}){const a=[],s=[],n=await self.caches.open(this.i),t=await n.keys(),r=new Set(t.map(e=>e.url));for(const[e,i]of this.s)r.has(i)?s.push(e):a.push({cacheKey:i,url:e});const c=a.map(({cacheKey:a,url:s})=>{const n=this.o.get(a),t=this.t.get(s);return this.l({cacheKey:a,cacheMode:t,event:e,integrity:n,plugins:i,url:s})});return await Promise.all(c),{updatedURLs:a.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.i),i=await e.keys(),a=new Set(this.s.values()),s=[];for(const n of i)a.has(n.url)||(await e.delete(n),s.push(n.url));return{deletedURLs:s}}async l({cacheKey:e,url:i,cacheMode:a,event:s,plugins:n,integrity:r}){const c=new Request(i,{integrity:r,cache:a,credentials:"same-origin"});let o,f=await l({event:s,plugins:n,request:c});for(const e of n||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:s,request:c,response:f}):f.status<400))throw new t("bad-precaching-response",{url:i,status:f.status});f.redirected&&(f=await u(f)),await d({event:s,plugins:n,response:f,request:e===i?c:new Request(e),cacheName:this.i,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const i=new URL(e,location.href);return this.s.get(i.href)}async matchPrecache(e){const i=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(i);if(a){return(await self.caches.open(this.i)).match(a)}}createHandler(e=!0){return async({request:i})=>{try{const e=await this.matchPrecache(i);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.i,url:i instanceof Request?i.url:i})}catch(a){if(e)return fetch(i);throw a}}}createHandlerBoundToURL(e,i=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const a=this.createHandler(i),s=new Request(e);return()=>a({request:s})}}let h;const m=()=>(h||(h=new g),h);const v=(e,i)=>{const a=m().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:i,directoryIndex:a,cleanURLs:s,urlManipulation:n}={}){const t=new URL(e,location.href);t.hash="",yield t.href;const r=function(e,i=[]){for(const a of[...e.searchParams.keys()])i.some(e=>e.test(a))&&e.searchParams.delete(a);return e}(t,i);if(yield r.href,a&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=a,yield e.href}if(s){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:t});for(const i of e)yield i.href}}(e,i)){const e=a.get(s);if(e)return e}};let w=!1;function y(e){w||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:i="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const t=a();self.addEventListener("fetch",a=>{const r=v(a.request.url,{cleanURLs:s,directoryIndex:i,ignoreURLParametersMatching:e,urlManipulation:n});if(!r)return;let c=self.caches.open(t).then(e=>e.match(r)).then(e=>e||fetch(r));a.respondWith(c)})})(e),w=!0)}const R=[],x={get:()=>R,add(e){R.push(...e)}},j=e=>{const i=m(),a=x.get();e.waitUntil(i.install({event:e,plugins:a}).catch(e=>{throw e}))},q=e=>{const i=m();e.waitUntil(i.activate())};var U;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),U={},function(e){m().addToCacheList(e),e.length>0&&(self.addEventListener("install",j),self.addEventListener("activate",q))}([{url:"dist/dialogbox.js",revision:"188a2de4eb7446a6a9d09a9ba5631153"},{url:"dist/enemy-grid.js",revision:"ede961d40b61ae9e4c18cbea287c2e71"},{url:"dist/enemy-ship.js",revision:"35484ac577a398e739abc0117c558e5e"},{url:"dist/game-grid.js",revision:"a92ab0564d28f9d44cea405424adbd19"},{url:"dist/infoxbox.js",revision:"789b338e16c4533dfc10008a21192a07"},{url:"dist/main-application.js",revision:"fdfffa32f6acfd017fd5d30ddfeb0606"},{url:"dist/player-grid.js",revision:"c46963840d3b0e668f4636d5abe37119"},{url:"dist/ship.js",revision:"f0fc16368700381c2ffca43055c7b2eb"},{url:"favicon.ico",revision:"10d0c41dac9fef3399dd5f0daa20f5c2"},{url:"images/battleship-top-horizontal.png",revision:"2e4607980a197ffb5fb3a354c85bcf5c"},{url:"images/battleship-top-horizontal.webp",revision:"9ac98e393363c3b5f3277f519cfdb680"},{url:"images/battleship-top-vertical.png",revision:"fc1036fcf82d311b598523a94b32f468"},{url:"images/battleship-top-vertical.webp",revision:"113cf0b692acfae06c3058198442262b"},{url:"images/captain.png",revision:"24b1ca678a405b85dbf3ef81ef11cbc7"},{url:"images/captain.webp",revision:"c6fa7403444ae3be1016bfbad68e155d"},{url:"images/carrier-top-horizontal.png",revision:"16b6e2ca3bf37a16f9349cdd0e9393f8"},{url:"images/carrier-top-horizontal.webp",revision:"123de838a394cc5682f5438f36711c0c"},{url:"images/carrier-top-vertical.png",revision:"a9be52bf8af19923d600c40ea8b27dcf"},{url:"images/carrier-top-vertical.webp",revision:"c761b8037db0ddd6b1c6551b3d973b64"},{url:"images/destroyer-top-horizontal.png",revision:"2c2e566af821dc58a2f832c9dedee1ca"},{url:"images/destroyer-top-horizontal.webp",revision:"a87d85316f447cad5641639af1c31fe6"},{url:"images/destroyer-top-vertical.png",revision:"74fd090f73c4791c538def0b0de65fdc"},{url:"images/destroyer-top-vertical.webp",revision:"6e063d196cf2d0ba053be82979ecc992"},{url:"images/manifest/apple-touch-icon.png",revision:"d82aaaf39ade7b5093a179322e3d0397"},{url:"images/manifest/browserconfig.xml",revision:"b0df1d8364886483f481bc261ea8db4b"},{url:"images/manifest/icon-128x128.png",revision:"b3a4b5d99439ab309f169a0d08fea27d"},{url:"images/manifest/icon-144x144.png",revision:"1cc69cb96c6ef0f5304ce1656716dc27"},{url:"images/manifest/icon-152x152.png",revision:"a6d9ed7b271195ebb75e4d02a8532bec"},{url:"images/manifest/icon-16x16.png",revision:"e25a17165d1f47715be76a388a197fe0"},{url:"images/manifest/icon-192x192.png",revision:"656d5bfb327f895a68ca523dc0a97ec4"},{url:"images/manifest/icon-32x32.png",revision:"b98a4ff127da0995d7d1bb210fb3b15e"},{url:"images/manifest/icon-384x384.png",revision:"7b6c3e3cbbd25a09c0be887f847eb040"},{url:"images/manifest/icon-512x512.png",revision:"aa9ef546dc38c10ccce4309015060e68"},{url:"images/manifest/icon-72x72.png",revision:"e947eec2a0b3d659a5d3ccc563aad67b"},{url:"images/manifest/icon-96x96.png",revision:"4f7e0b149f145ae6307db992473f1c89"},{url:"images/manifest/mstile-150x150.png",revision:"a1654210e8363638f3ae0922a2b0be93"},{url:"images/manifest/original.svg",revision:"34c82bde16c3727be19e853c5b4571c3"},{url:"images/manifest/safari-pinned-tab.svg",revision:"3365a71f685766ccbe2ac15eee196ba1"},{url:"images/ocean-1024.jpg",revision:"30459948e401c27b15d4c0d3fd425adb"},{url:"images/ocean-1024.webp",revision:"611051274c0047b2e6e6d97ead40e31e"},{url:"images/ocean-1366.jpg",revision:"54c494fcc9fb1447f93cc26e214a0ec3"},{url:"images/ocean-1366.webp",revision:"a3ba80bdb73392375b2cb25e28b48c85"},{url:"images/ocean-1440.jpg",revision:"e09bbc5ce1624b424adb5f5619900f42"},{url:"images/ocean-1440.webp",revision:"d277e66d233eb571bb9b16f869634c44"},{url:"images/ocean-1920.webp",revision:"4444dc8892c46b9f8a6670d54d9d094a"},{url:"images/ocean-412.jpg",revision:"4fcd761733ad8b81a739975a2d5b1782"},{url:"images/ocean-412.webp",revision:"ce6fd816365b1587127be0aae7e209aa"},{url:"images/ocean-4k.webp",revision:"fd63207acda4612c7c6ad4b1d6521792"},{url:"images/ocean-768.jpg",revision:"e89dac16fb79b7de581d0d9753aebd5b"},{url:"images/ocean-768.webp",revision:"a619a9cbb80d542d6730a5731c64a957"},{url:"images/ocean-800.jpg",revision:"b98640355af8c6ebdda58c916292be5b"},{url:"images/ocean-800.webp",revision:"e021cc7e66a558069505e5e9290e5bd2"},{url:"images/rescue-top-horizontal.png",revision:"ff0acc21f8e40a58a6dc7201954b2969"},{url:"images/rescue-top-horizontal.webp",revision:"28678f3a21936295941cdbf840b13ab0"},{url:"images/rescue-top-vertical.png",revision:"56d1108da75a0e2f943622c51bdb2324"},{url:"images/rescue-top-vertical.webp",revision:"a8bdf39060a3fb65d1ee6f41b0cc322b"},{url:"images/restart-button.png",revision:"7a5aea49ca073db06e616eed68ea5cfe"},{url:"images/restart-button.webp",revision:"8443686c9106abcd62e935f975016289"},{url:"images/submarine-top-horizontal.png",revision:"eaca1ace9341ff6e71306db7d0b4ff7f"},{url:"images/submarine-top-horizontal.webp",revision:"b9ba2c6beb4bbd99471c95f93b7d8923"},{url:"images/submarine-top-vertical.png",revision:"64d93919478adc7c57842244f52ca419"},{url:"images/submarine-top-vertical.webp",revision:"ecf48493bc833fd7e0eac0dfe33d6364"},{url:"index.html",revision:"79c13f16a03db1f3d58147dab53d4fe5"},{url:"src/dialogbox.js",revision:"a128a30b76aa39423e7f986c6e5188ae"},{url:"src/enemy-grid.js",revision:"2a4da1017e3e17e722331acfaf9b38e3"},{url:"src/enemy-ship.js",revision:"7f235d1197a272bd956d1b0d18403bcc"},{url:"src/game-grid.js",revision:"20e475f47954222677f64405e93b520e"},{url:"src/infoxbox.js",revision:"3da21e8e9362d14bbdf20760694ca478"},{url:"src/main-application.js",revision:"3a70bb5d8b413babc2ad18f7bf313d00"},{url:"src/player-grid.js",revision:"60fbc82ab9dd953fccedb6a2ab8f0d23"},{url:"src/ship.js",revision:"dcd98fb229fb9f6b452a304ed2bef10b"},{url:"style.css",revision:"43db094819bb7ad642301bc26db800fa"},{url:"web_modules/common/lit-html-5735858c.js",revision:"9a25d72acf8865ea22735fab538d44f9"},{url:"web_modules/foldable-device-configurator.js",revision:"6a9a034b96b12689b8cba66fae1384ae"},{url:"web_modules/lit-element.js",revision:"1ab87f6c0404b0dc72f2db90b2dbb7c0"},{url:"web_modules/lit-html.js",revision:"96bff3d950f33fcdb1ca9232b0fc8d3e"},{url:"web_modules/lit-html/directives/class-map.js",revision:"6eabccb1408acabfa3f7d6fdaee25a4d"},{url:"web_modules/spanning-css-polyfill.js",revision:"d2fb97e3ea26638acc8871f54b9961ee"},{url:"workbox-config.js",revision:"d61dc136d347b726e8528838d9331447"},{url:"manifest.json",revision:"0865e8ca9779c805bbba47535ffab282"},{url:"web_modules/import-map.json",revision:"6ad5ba0702e918d92ab4bb1fd6cf9775"}]),y(U);
//# sourceMappingURL=sw.js.map
